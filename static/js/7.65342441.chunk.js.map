{"version":3,"sources":["utils/validators/validators.js","Common/FormsControl.js","Common/FormsControl.module.scss","components/Login/login.module.scss","components/Login/loginForm.js","components/Login/login.js","components/Login/LoginContainer.js"],"names":["maxLength","max","value","length","undefined","required","email","test","FormControl","input","meta","props","hasError","touched","error","className","classes","children","errorMessage","Input","restProps","Textarea","module","exports","LoginForm","handleSubmit","onSubmit","htmlFor","Field","name","component","type","validate","reduxForm","form","Login","isAuth","to","password","rememberMe","login","compose","connect","state","auth"],"mappings":"wHAAA,sGAAO,IAAMA,EAAY,SAAAC,GAAG,OAAI,SAAAC,GAAK,OACnCA,GAASA,EAAMC,OAASF,EAAxB,kBAAyCA,EAAzC,4BAAoEG,IAEzDC,EAAW,SAAAH,GACtB,OAAOA,OAAQE,EAAY,qBAGhBE,EAAQ,SAAAJ,GAAK,OACxBA,IAAU,4CAA4CK,KAAKL,GACvD,6BACAE,I,oJCPAI,EAAc,SAAC,GAA8B,EAA5BC,MAA6B,IAAtBC,EAAqB,EAArBA,KAASC,EAAY,gCAC3CC,EAAWF,EAAKG,SAAWH,EAAKI,MAEtC,OACE,yBAAKC,UAAWH,EAAWI,IAAQF,MAAQ,IACzC,6BAAMH,EAAMM,UACXL,GAAY,0BAAMG,UAAWC,IAAQE,cAAeR,EAAKI,SAKnDK,EAAQ,SAAAR,GAAU,IACrBF,EAA8BE,EAA9BF,MAAgBW,GAAcT,EAAvBD,KADa,YACUC,EADV,mBAE5B,OACE,kBAACH,EAAgBG,EACf,2CAAWF,EAAWW,MAKfC,EAAW,SAAAV,GAAU,IACxBF,EAA8BE,EAA9BF,MAAgBW,GAAcT,EAAvBD,KADgB,YACOC,EADP,mBAE/B,OACE,kBAACH,EAAgBG,EACf,8CAAcF,EAAWW,O,oBC1B/BE,EAAOC,QAAU,CAAC,MAAQ,4BAA4B,aAAe,qC,oBCArED,EAAOC,QAAU,CAAC,MAAQ,uB,0HCKtBC,EAAY,SAAAb,GAAU,IAChBc,EAAiBd,EAAjBc,aACR,OACE,0BAAMC,SAAUD,GACd,6BACE,2BAAOE,QAAQ,SAAf,SACA,kBAACC,EAAA,EAAD,CACEC,KAAK,QACLC,UAAWX,IACXY,KAAK,OACLC,SAAU,CAAC3B,IAAUC,QAGzB,6BACE,2BAAOqB,QAAQ,YAAf,YACA,kBAACC,EAAA,EAAD,CACEC,KAAK,WACLC,UAAWX,IACXY,KAAK,WACLC,SAAU,CAAC3B,QAGf,6BACE,2BAAOsB,QAAQ,cAAf,eACA,kBAACC,EAAA,EAAD,CAAOC,KAAK,aAAaC,UAAWX,IAAOY,KAAK,cAElD,yBAAKhB,UAAWC,IAAQF,OAAQH,EAAMG,OACtC,6BACE,4CAQOU,EAFfA,EAAYS,YAAU,CAAEC,KAAM,aAAlBD,CAAiCT,G,QCrB9BW,EAfD,SAAAxB,GAKZ,OAAIA,EAAMyB,OAAe,kBAAC,IAAD,CAAUC,GAAI,aAGrC,6BACE,qCACA,kBAAC,EAAD,CAAWX,SATE,SAAC,GAAqC,IAAnCpB,EAAkC,EAAlCA,MAAOgC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,WACnC5B,EAAM6B,MAAMlC,EAAOgC,EAAUC,Q,gBCGlBE,sBACbC,aALsB,SAAAC,GACtB,MAAO,CAAEP,OAAQO,EAAMC,KAAKR,UAM1B,CAAEI,YAHSC,CAKbN","file":"static/js/7.65342441.chunk.js","sourcesContent":["export const maxLength = max => value =>\r\n  value && value.length > max ? `Must be ${max} characters or less` : undefined;\r\n\r\nexport const required = value => {\r\n  return value ? undefined : 'Field is required';\r\n};\r\n\r\nexport const email = value =>\r\n  value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)\r\n    ? 'Invalid email address'\r\n    : undefined;\r\n","import React from 'react';\r\nimport classes from './FormsControl.module.scss';\r\n\r\nconst FormControl = ({ input, meta, ...props }) => {\r\n  const hasError = meta.touched && meta.error;\r\n\r\n  return (\r\n    <div className={hasError ? classes.error : ''}>\r\n      <div>{props.children}</div>\r\n      {hasError && <span className={classes.errorMessage}>{meta.error}</span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Input = props => {\r\n  const { input, meta, ...restProps } = props;\r\n  return (\r\n    <FormControl {...props}>\r\n      <input {...input} {...restProps} />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport const Textarea = props => {\r\n  const { input, meta, ...restProps } = props;\r\n  return (\r\n    <FormControl {...props}>\r\n      <textarea {...input} {...restProps} />\r\n    </FormControl>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"FormsControl_error__3Xx8o\",\"errorMessage\":\"FormsControl_errorMessage__Jo2_I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"login_error__wvio1\"};","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Input } from '../../Common/FormsControl';\r\nimport { required, email } from '../../utils/validators/validators';\r\nimport classes from './login.module.scss';\r\n\r\nlet LoginForm = props => {\r\n  const { handleSubmit } = props;\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <label htmlFor=\"email\">Login</label>\r\n        <Field\r\n          name=\"email\"\r\n          component={Input}\r\n          type=\"text\"\r\n          validate={[required, email]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"password\">Password</label>\r\n        <Field\r\n          name=\"password\"\r\n          component={Input}\r\n          type=\"password\"\r\n          validate={[required]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"rememberMe\">Remember me</label>\r\n        <Field name=\"rememberMe\" component={Input} type=\"checkbox\" />\r\n      </div>\r\n      <div className={classes.error}>{props.error}</div>\r\n      <div>\r\n        <button>Login</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nLoginForm = reduxForm({ form: 'loginForm' })(LoginForm);\r\n\r\nexport default LoginForm;\r\n","import React from 'react';\r\nimport LoginForm from './loginForm';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst Login = props => {\r\n  const onSubmit = ({ email, password, rememberMe }) => {\r\n    props.login(email, password, rememberMe);\r\n  };\r\n\r\n  if (props.isAuth) return <Redirect to={'/profile'} />;\r\n\r\n  return (\r\n    <div>\r\n      <h1>Login</h1>\r\n      <LoginForm onSubmit={onSubmit} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { compose } from 'redux';\r\nimport Login from './login';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../../redux/auth-reducer';\r\n\r\nconst mapStateToProps = state => {\r\n  return { isAuth: state.auth.isAuth };\r\n};\r\n\r\nexport default compose(\r\n  connect(\r\n    mapStateToProps,\r\n    { login }\r\n  )\r\n)(Login);\r\n"],"sourceRoot":""}