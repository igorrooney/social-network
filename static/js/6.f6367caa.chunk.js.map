{"version":3,"sources":["Common/FormsControl.js","utils/validators/validators.js","Common/FormsControl.module.scss","hoc/withAuthRedirect.js","components/Dialogs/Dialogs.module.scss","components/Dialogs/CreateMessageForm.js","components/Dialogs/Dialogs.js","components/Dialogs/DialogsContainer.js"],"names":["FormControl","input","meta","props","hasError","touched","error","className","classes","children","errorMessage","Input","restProps","Textarea","createField","placeholder","name","validators","component","text","validate","maxLength","max","value","length","undefined","required","email","test","module","exports","mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","to","React","connect","maxLength50","CreateMessageForm","handleSubmit","onSubmit","addMessage","Field","reduxForm","form","onSubmitSuccess","result","dispatch","reset","DialogItem","id","photo","dialog","user","src","alt","Message","message","Dialogs","dialogItems","dialogs","map","item","key","messageItems","messages","dialogsItems","formData","compose","dialogsPage"],"mappings":"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","file":"static/js/6.f6367caa.chunk.js","sourcesContent":["import React from 'react';\r\nimport classes from './FormsControl.module.scss';\r\nimport { Field } from 'redux-form';\r\n\r\nconst FormControl = ({ input, meta, ...props }) => {\r\n  const hasError = meta.touched && meta.error;\r\n\r\n  return (\r\n    <div className={hasError ? classes.error : ''}>\r\n      <div>{props.children}</div>\r\n      {hasError && <span className={classes.errorMessage}>{meta.error}</span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Input = props => {\r\n  const { input, meta, ...restProps } = props;\r\n  return (\r\n    <FormControl {...props}>\r\n      <input {...input} {...restProps} />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport const Textarea = props => {\r\n  const { input, meta, ...restProps } = props;\r\n  return (\r\n    <FormControl {...props}>\r\n      <textarea {...input} {...restProps} />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport const createField = (\r\n  placeholder,\r\n  name,\r\n  validators,\r\n  component,\r\n  props = {},\r\n  text = ''\r\n) => (\r\n  <div>\r\n    <Field\r\n      placeholder={placeholder}\r\n      name={name}\r\n      validate={validators}\r\n      component={component}\r\n      {...props}\r\n    />{' '}\r\n    {text}\r\n  </div>\r\n);\r\n","export const maxLength = max => value =>\r\n  value && value.length > max ? `Must be ${max} characters or less` : undefined;\r\n\r\nexport const required = value => {\r\n  return value ? undefined : 'Field is required';\r\n};\r\n\r\nexport const email = value =>\r\n  value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)\r\n    ? 'Invalid email address'\r\n    : undefined;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"FormsControl_error__3Xx8o\",\"errorMessage\":\"FormsControl_errorMessage__Jo2_I\"};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst mapStateToProps = state => {\r\n  return { isAuth: state.auth.isAuth };\r\n};\r\n\r\nexport const withAuthRedirect = Component => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to=\"/login\" />;\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n  return connect(mapStateToProps)(RedirectComponent);\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2dYhS\",\"addMessage\":\"Dialogs_addMessage__292w8\",\"dialogsItems\":\"Dialogs_dialogsItems__3BIa2\",\"user\":\"Dialogs_user__2QIfV\",\"dialog\":\"Dialogs_dialog__liDmR\",\"name\":\"Dialogs_name__3Kfzl\",\"active\":\"Dialogs_active__2NPwf\",\"messages\":\"Dialogs_messages__1BMrd\",\"message\":\"Dialogs_message__1x-nQ\"};","import React from 'react';\r\nimport classes from './Dialogs.module.scss';\r\n\r\nimport { Field, reduxForm, reset } from 'redux-form';\r\nimport { required, maxLength } from '../../utils/validators/validators';\r\nimport { Textarea } from '../../Common/FormsControl';\r\n\r\nconst maxLength50 = maxLength(50);\r\n\r\nconst afterSubmit = (result, dispatch) => dispatch(reset('createMessageForm'));\r\n\r\nlet CreateMessageForm = props => {\r\n  const { handleSubmit } = props;\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className={classes.addMessage}>\r\n        <div>\r\n          <Field\r\n            name=\"message\"\r\n            component={Textarea}\r\n            placeholder=\"Enter your message\"\r\n            validate={[required, maxLength50]}\r\n          />\r\n        </div>\r\n        <div>\r\n          <button className=\"btn btn-primary\">Send message</button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nCreateMessageForm = reduxForm({\r\n  form: 'createMessageForm',\r\n  onSubmitSuccess: afterSubmit\r\n})(CreateMessageForm);\r\nexport default CreateMessageForm;\r\n","import React from 'react';\r\n\r\nimport { NavLink } from 'react-router-dom';\r\nimport classes from './Dialogs.module.scss';\r\nimport CreateMessageForm from './CreateMessageForm';\r\n\r\nconst DialogItem = ({ name, id, photo }) => {\r\n  return (\r\n    <div className={classes.dialog}>\r\n      <NavLink to={'/dialogs/' + id} className={classes.user}>\r\n        <img src={photo} alt=\"avatar\" />\r\n        <div className={classes.name}>{name}</div>\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Message = ({ message }) => {\r\n  return <div className={classes.message}>{message}</div>;\r\n};\r\n\r\nconst Dialogs = ({ state, addMessage }) => {\r\n  const dialogItems = state.dialogs.map(item => {\r\n    return (\r\n      <DialogItem\r\n        key={item.id}\r\n        name={item.name}\r\n        id={item.id}\r\n        photo={item.photo}\r\n      />\r\n    );\r\n  });\r\n\r\n  const messageItems = state.messages.map(item => {\r\n    return <Message key={item.id} message={item.message} id={item.id} />;\r\n  });\r\n\r\n  const onSubmit = formData => {\r\n    addMessage(formData.message);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.dialogs}>\r\n      <div className={classes.dialogsItems}>{dialogItems}</div>\r\n      <div className={classes.messages}>\r\n        {messageItems}\r\n        <CreateMessageForm onSubmit={onSubmit} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dialogs;\r\n","import { addMessage } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nconst mapStateToProps = state => {\r\n  return { state: state.dialogsPage, isAuth: state.auth.isAuth };\r\n};\r\n\r\nexport default compose(\r\n  connect(\r\n    mapStateToProps,\r\n    { addMessage }\r\n  ),\r\n  withAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}