{"version":3,"sources":["utils/validators/validators.js","Common/FormsControl.js","Common/FormsControl.module.scss","hoc/withAuthRedirect.js","components/Dialogs/Dialogs.module.scss","components/Dialogs/CreateMessageForm.js","components/Dialogs/Dialogs.js","components/Dialogs/DialogsContainer.js"],"names":["maxLength","max","value","length","undefined","required","email","test","FormControl","input","meta","props","hasError","touched","error","className","classes","children","errorMessage","Input","restProps","Textarea","module","exports","mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","to","React","connect","maxLength50","CreateMessageForm","handleSubmit","onSubmit","addMessage","Field","name","component","placeholder","validate","reduxForm","form","onSubmitSuccess","result","dispatch","reset","DialogItem","id","photo","dialog","user","src","alt","Message","message","Dialogs","dialogItems","dialogs","map","item","key","messageItems","messages","dialogsItems","formData","compose","dialogsPage"],"mappings":"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","file":"static/js/6.d4d2ab4b.chunk.js","sourcesContent":["export const maxLength = max => value =>\r\n  value && value.length > max ? `Must be ${max} characters or less` : undefined;\r\n\r\nexport const required = value => {\r\n  return value ? undefined : 'Field is required';\r\n};\r\n\r\nexport const email = value =>\r\n  value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)\r\n    ? 'Invalid email address'\r\n    : undefined;\r\n","import React from 'react';\r\nimport classes from './FormsControl.module.scss';\r\n\r\nconst FormControl = ({ input, meta, ...props }) => {\r\n  const hasError = meta.touched && meta.error;\r\n\r\n  return (\r\n    <div className={hasError ? classes.error : ''}>\r\n      <div>{props.children}</div>\r\n      {hasError && <span className={classes.errorMessage}>{meta.error}</span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Input = props => {\r\n  const { input, meta, ...restProps } = props;\r\n  return (\r\n    <FormControl {...props}>\r\n      <input {...input} {...restProps} />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport const Textarea = props => {\r\n  const { input, meta, ...restProps } = props;\r\n  return (\r\n    <FormControl {...props}>\r\n      <textarea {...input} {...restProps} />\r\n    </FormControl>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"FormsControl_error__3Xx8o\",\"errorMessage\":\"FormsControl_errorMessage__Jo2_I\"};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst mapStateToProps = state => {\r\n  return { isAuth: state.auth.isAuth };\r\n};\r\n\r\nexport const withAuthRedirect = Component => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to=\"/login\" />;\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n  return connect(mapStateToProps)(RedirectComponent);\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2dYhS\",\"addMessage\":\"Dialogs_addMessage__292w8\",\"dialogsItems\":\"Dialogs_dialogsItems__3BIa2\",\"user\":\"Dialogs_user__2QIfV\",\"dialog\":\"Dialogs_dialog__liDmR\",\"name\":\"Dialogs_name__3Kfzl\",\"active\":\"Dialogs_active__2NPwf\",\"messages\":\"Dialogs_messages__1BMrd\",\"message\":\"Dialogs_message__1x-nQ\"};","import React from 'react';\r\nimport classes from './Dialogs.module.scss';\r\n\r\nimport { Field, reduxForm, reset } from 'redux-form';\r\nimport { required, maxLength } from '../../utils/validators/validators';\r\nimport { Textarea } from '../../Common/FormsControl';\r\n\r\nconst maxLength50 = maxLength(50);\r\n\r\nconst afterSubmit = (result, dispatch) => dispatch(reset('createMessageForm'));\r\n\r\nlet CreateMessageForm = props => {\r\n  const { handleSubmit } = props;\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className={classes.addMessage}>\r\n        <div>\r\n          <Field\r\n            name=\"message\"\r\n            component={Textarea}\r\n            placeholder=\"Enter your message\"\r\n            validate={[required, maxLength50]}\r\n          />\r\n        </div>\r\n        <div>\r\n          <button className=\"btn btn-primary\">Send message</button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nCreateMessageForm = reduxForm({\r\n  form: 'createMessageForm',\r\n  onSubmitSuccess: afterSubmit\r\n})(CreateMessageForm);\r\nexport default CreateMessageForm;\r\n","import React from 'react';\r\n\r\nimport { NavLink } from 'react-router-dom';\r\nimport classes from './Dialogs.module.scss';\r\nimport CreateMessageForm from './CreateMessageForm';\r\n\r\nconst DialogItem = ({ name, id, photo }) => {\r\n  return (\r\n    <div className={classes.dialog}>\r\n      <NavLink to={'/dialogs/' + id} className={classes.user}>\r\n        <img src={photo} alt=\"avatar\" />\r\n        <div className={classes.name}>{name}</div>\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Message = ({ message }) => {\r\n  return <div className={classes.message}>{message}</div>;\r\n};\r\n\r\nconst Dialogs = ({ state, addMessage }) => {\r\n  const dialogItems = state.dialogs.map(item => {\r\n    return (\r\n      <DialogItem\r\n        key={item.id}\r\n        name={item.name}\r\n        id={item.id}\r\n        photo={item.photo}\r\n      />\r\n    );\r\n  });\r\n\r\n  const messageItems = state.messages.map(item => {\r\n    return <Message key={item.id} message={item.message} id={item.id} />;\r\n  });\r\n\r\n  const onSubmit = formData => {\r\n    addMessage(formData.message);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.dialogs}>\r\n      <div className={classes.dialogsItems}>{dialogItems}</div>\r\n      <div className={classes.messages}>\r\n        {messageItems}\r\n        <CreateMessageForm onSubmit={onSubmit} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dialogs;\r\n","import { addMessage } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nconst mapStateToProps = state => {\r\n  return { state: state.dialogsPage, isAuth: state.auth.isAuth };\r\n};\r\n\r\nexport default compose(\r\n  connect(\r\n    mapStateToProps,\r\n    { addMessage }\r\n  ),\r\n  withAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}